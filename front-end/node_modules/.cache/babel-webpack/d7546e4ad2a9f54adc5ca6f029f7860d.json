{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-type': 'application/x-www-form-urlencoded' // 'Content-Type': 'application/json',\n\n  }),\n  withCredentials: true\n};\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(http, router) {\n      this.http = http;\n      this.router = router;\n      this.apiUrl = 'http://localhost:3000';\n    }\n\n    login(form) {\n      let url = this.apiUrl + '/users/login';\n      let json = JSON.stringify(form);\n      return this.http.post(url, json, httpOptions);\n    }\n\n    register(form) {\n      let url = this.apiUrl + '/users/register';\n      let json = {\n        name: form.value.name,\n        email: form.value.email,\n        password: form.value.password\n      };\n      console.log(json);\n      return this.http.post(url, json, httpOptions);\n    }\n\n    loggedIn() {\n      let url = this.apiUrl + '/users/loggedIn';\n      let token = this.getToken();\n\n      if (token == null) {\n        return false;\n      }\n\n      let data = {\n        jwt: token\n      };\n      return this.http.post(url, data, httpOptions).toPromise();\n    }\n\n    getToken() {\n      return localStorage.getItem('token');\n    }\n\n    logOut() {\n      localStorage.removeItem('token');\n      this.router.navigate(['/']);\n    }\n\n    getUser() {\n      let token = this.getToken();\n      let data = {\n        jwt: token\n      };\n      let url = this.apiUrl + '/users/get';\n      return this.http.post(url, data, httpOptions);\n    }\n\n    updateUser(data) {\n      let url = this.apiUrl + '/users/update';\n      let token = this.getToken();\n      let post_data = {\n        stats: data.stats,\n        notif: data.notif,\n        identity: data.identity,\n        jwt: token\n      };\n      return this.http.post(url, post_data, httpOptions);\n    }\n\n    deleteUser() {\n      let token = this.getToken();\n      let url = this.apiUrl + '/users/delete';\n      return this.http.post(url, {\n        token\n      }, httpOptions);\n    }\n\n    getAllUsers() {\n      let url = this.apiUrl + '/users/get-all';\n      return this.http.get(url, httpOptions);\n    }\n\n  }\n\n  UsersService.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n  };\n\n  UsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"/Users/ctb/RIT/SWEN-101/NH/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/users.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginGuard {\n  constructor(usersService, router) {\n    this.usersService = usersService;\n    this.router = router;\n    this.usersService.loggedIn().subscribe(result => {\n      this.loggedIn = result;\n    });\n  }\n\n  canActivate() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (yield !_this.usersService.loggedIn()) {\n        console.log('this.loggedIn:', _this.loggedIn);\n        return true;\n      } else {\n        console.log('login guard');\n\n        _this.router.navigate(['/menu']);\n\n        return false;\n      }\n    })();\n  }\n\n}\n\nLoginGuard.ɵfac = function LoginGuard_Factory(t) {\n  return new (t || LoginGuard)(i0.ɵɵinject(i1.UsersService), i0.ɵɵinject(i2.Router));\n};\n\nLoginGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: LoginGuard,\n  factory: LoginGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/Users/ctb/RIT/SWEN-101/NH/front-end/src/app/login.guard.ts"],"names":["i0","i1","i2","LoginGuard","constructor","usersService","router","loggedIn","subscribe","result","canActivate","console","log","navigate","ɵfac","LoginGuard_Factory","t","ɵɵinject","UsersService","Router","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,0BAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,OAAO,MAAMC,UAAN,CAAiB;AACpBC,EAAAA,WAAW,CAACC,YAAD,EAAeC,MAAf,EAAuB;AAC9B,SAAKD,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKD,YAAL,CAAkBE,QAAlB,GAA6BC,SAA7B,CAAwCC,MAAD,IAAY;AAC/C,WAAKF,QAAL,GAAgBE,MAAhB;AACH,KAFD;AAGH;;AACKC,EAAAA,WAAW,GAAG;AAAA;;AAAA;AAChB,gBAAU,CAAC,KAAI,CAACL,YAAL,CAAkBE,QAAlB,EAAX,EAAyC;AACrCI,QAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B,KAAI,CAACL,QAAnC;AACA,eAAO,IAAP;AACH,OAHD,MAIK;AACDI,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,QAAA,KAAI,CAACN,MAAL,CAAYO,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,eAAO,KAAP;AACH;AATe;AAUnB;;AAlBmB;;AAoBxBV,UAAU,CAACW,IAAX,GAAkB,SAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAAE,SAAO,KAAKA,CAAC,IAAIb,UAAV,EAAsBH,EAAE,CAACiB,QAAH,CAAYhB,EAAE,CAACiB,YAAf,CAAtB,EAAoDlB,EAAE,CAACiB,QAAH,CAAYf,EAAE,CAACiB,MAAf,CAApD,CAAP;AAAqF,CAAxI;;AACAhB,UAAU,CAACiB,KAAX,GAAmB,aAAcpB,EAAE,CAACqB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEnB,UAAT;AAAqBoB,EAAAA,OAAO,EAAEpB,UAAU,CAACW,IAAzC;AAA+CU,EAAAA,UAAU,EAAE;AAA3D,CAAtB,CAAjC","sourcesContent":["import * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/users.service\";\nimport * as i2 from \"@angular/router\";\nexport class LoginGuard {\n    constructor(usersService, router) {\n        this.usersService = usersService;\n        this.router = router;\n        this.usersService.loggedIn().subscribe((result) => {\n            this.loggedIn = result;\n        });\n    }\n    async canActivate() {\n        if (await !this.usersService.loggedIn()) {\n            console.log('this.loggedIn:', this.loggedIn);\n            return true;\n        }\n        else {\n            console.log('login guard');\n            this.router.navigate(['/menu']);\n            return false;\n        }\n    }\n}\nLoginGuard.ɵfac = function LoginGuard_Factory(t) { return new (t || LoginGuard)(i0.ɵɵinject(i1.UsersService), i0.ɵɵinject(i2.Router)); };\nLoginGuard.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: LoginGuard, factory: LoginGuard.ɵfac, providedIn: 'root' });\n"]},"metadata":{},"sourceType":"module"}
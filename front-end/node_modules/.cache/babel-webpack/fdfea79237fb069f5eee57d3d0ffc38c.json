{"ast":null,"code":"import _asyncToGenerator from \"/Users/ctb/RIT/SWEN-101/NH/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SettingsComponent = class SettingsComponent {\n  constructor(usersService, router) {\n    this.usersService = usersService;\n    this.router = router;\n    this.errorMessage = false;\n    this.successMessage = false;\n    this.stats = false;\n    this.identity = false;\n    this.notifications = false;\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.isLoggedIn = yield _this.usersService.loggedIn();\n\n      if (_this.isLoggedIn) {\n        _this.usersService.getUser().subscribe(res => {\n          _this.stats = res.user.stats;\n          _this.identity = res.user.identity;\n          _this.notifications = res.user.notifications;\n        });\n      }\n    })();\n  }\n\n  changeStatus(value) {\n    switch (value) {\n      case 0:\n        this.stats = !this.stats;\n        break;\n\n      case 1:\n        this.identity = !this.identity;\n        break;\n\n      case 2:\n        this.notifications = !this.notifications;\n        break;\n    }\n  }\n\n  saveChanges() {\n    let data = {\n      stats: this.stats,\n      identity: this.identity,\n      notif: this.notifications\n    };\n    this.usersService.updateUser(data).subscribe(res => {\n      if (res.success) {\n        return this.successMessage = true;\n      }\n\n      return this.errorMessage = true;\n    }, err => {\n      return this.errorMessage = true;\n    });\n  }\n\n};\nSettingsComponent = __decorate([Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})], SettingsComponent);\nexport { SettingsComponent };","map":{"version":3,"sources":["/Users/ctb/RIT/SWEN-101/NH/front-end/src/app/components/settings/settings.component.ts"],"names":["__decorate","Component","SettingsComponent","constructor","usersService","router","errorMessage","successMessage","stats","identity","notifications","ngOnInit","isLoggedIn","loggedIn","getUser","subscribe","res","user","changeStatus","value","saveChanges","data","notif","updateUser","success","err","selector","templateUrl","styleUrls"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,IAAIC,iBAAiB,GAAG,MAAMA,iBAAN,CAAwB;AAC5CC,EAAAA,WAAW,CAACC,YAAD,EAAeC,MAAf,EAAuB;AAC9B,SAAKD,YAAL,GAAoBA,YAApB;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,YAAL,GAAoB,KAApB;AACA,SAAKC,cAAL,GAAsB,KAAtB;AACA,SAAKC,KAAL,GAAa,KAAb;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,aAAL,GAAqB,KAArB;AACH;;AACKC,EAAAA,QAAQ,GAAG;AAAA;;AAAA;AACb,MAAA,KAAI,CAACC,UAAL,SAAwB,KAAI,CAACR,YAAL,CAAkBS,QAAlB,EAAxB;;AACA,UAAI,KAAI,CAACD,UAAT,EAAqB;AACjB,QAAA,KAAI,CAACR,YAAL,CAAkBU,OAAlB,GAA4BC,SAA5B,CAAuCC,GAAD,IAAS;AAC3C,UAAA,KAAI,CAACR,KAAL,GAAaQ,GAAG,CAACC,IAAJ,CAAST,KAAtB;AACA,UAAA,KAAI,CAACC,QAAL,GAAgBO,GAAG,CAACC,IAAJ,CAASR,QAAzB;AACA,UAAA,KAAI,CAACC,aAAL,GAAqBM,GAAG,CAACC,IAAJ,CAASP,aAA9B;AACH,SAJD;AAKH;AARY;AAShB;;AACDQ,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAChB,YAAQA,KAAR;AACI,WAAK,CAAL;AACI,aAAKX,KAAL,GAAa,CAAC,KAAKA,KAAnB;AACA;;AACJ,WAAK,CAAL;AACI,aAAKC,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACA;;AACJ,WAAK,CAAL;AACI,aAAKC,aAAL,GAAqB,CAAC,KAAKA,aAA3B;AACA;AATR;AAWH;;AACDU,EAAAA,WAAW,GAAG;AACV,QAAIC,IAAI,GAAG;AACPb,MAAAA,KAAK,EAAE,KAAKA,KADL;AAEPC,MAAAA,QAAQ,EAAE,KAAKA,QAFR;AAGPa,MAAAA,KAAK,EAAE,KAAKZ;AAHL,KAAX;AAKA,SAAKN,YAAL,CAAkBmB,UAAlB,CAA6BF,IAA7B,EAAmCN,SAAnC,CAA8CC,GAAD,IAAS;AAClD,UAAIA,GAAG,CAACQ,OAAR,EAAiB;AACb,eAAQ,KAAKjB,cAAL,GAAsB,IAA9B;AACH;;AACD,aAAQ,KAAKD,YAAL,GAAoB,IAA5B;AACH,KALD,EAKImB,GAAD,IAAS;AACR,aAAQ,KAAKnB,YAAL,GAAoB,IAA5B;AACH,KAPD;AAQH;;AA/C2C,CAAhD;AAiDAJ,iBAAiB,GAAGF,UAAU,CAAC,CAC3BC,SAAS,CAAC;AACNyB,EAAAA,QAAQ,EAAE,cADJ;AAENC,EAAAA,WAAW,EAAE,2BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,0BAAD;AAHL,CAAD,CADkB,CAAD,EAM3B1B,iBAN2B,CAA9B;AAOA,SAASA,iBAAT","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SettingsComponent = class SettingsComponent {\n    constructor(usersService, router) {\n        this.usersService = usersService;\n        this.router = router;\n        this.errorMessage = false;\n        this.successMessage = false;\n        this.stats = false;\n        this.identity = false;\n        this.notifications = false;\n    }\n    async ngOnInit() {\n        this.isLoggedIn = await this.usersService.loggedIn();\n        if (this.isLoggedIn) {\n            this.usersService.getUser().subscribe((res) => {\n                this.stats = res.user.stats;\n                this.identity = res.user.identity;\n                this.notifications = res.user.notifications;\n            });\n        }\n    }\n    changeStatus(value) {\n        switch (value) {\n            case 0:\n                this.stats = !this.stats;\n                break;\n            case 1:\n                this.identity = !this.identity;\n                break;\n            case 2:\n                this.notifications = !this.notifications;\n                break;\n        }\n    }\n    saveChanges() {\n        let data = {\n            stats: this.stats,\n            identity: this.identity,\n            notif: this.notifications,\n        };\n        this.usersService.updateUser(data).subscribe((res) => {\n            if (res.success) {\n                return (this.successMessage = true);\n            }\n            return (this.errorMessage = true);\n        }, (err) => {\n            return (this.errorMessage = true);\n        });\n    }\n};\nSettingsComponent = __decorate([\n    Component({\n        selector: 'app-settings',\n        templateUrl: './settings.component.html',\n        styleUrls: ['./settings.component.css'],\n    })\n], SettingsComponent);\nexport { SettingsComponent };\n"]},"metadata":{},"sourceType":"module"}